@startuml
Title Panel PC __MIS__
  actor "OIS ผู้ปฏิบัติงาน" as OIS
  OIS -> "Panel PC" :เมื่อเปิดระบบ Telemed หรือ สตาร์ทรถ
  "Panel PC" -> "Panel PC": Load รหัสรถ C:\\ telemed\car.txt
  note left
    currentVehicleId=12344
  end note

  queue "Panel PC\nQueue" as panelq
  "Panel PC" -> panelq : Subscribe with currentVehicleId
  ...

  group เมื่อได้รับ message
    "Panel PC" <-- panelq : Message
    note left
      Body
      {
        vehicleId รหัสพาหนะ
        operatorID คนที่กดรับงาน
        misRoomId
        slcus050_id
        slcus020_id
        autojoin
        active:true
      }
    endnote

    "Panel PC" -> "Panel PC": บันทึก Body ลงใน Local disk.
    note left
      # ป้องกันหากเครื่องมีการเปิด
      # ปิดโดยไม่ได้ตั้งใจ
      # อื่นๆ
      หากใน Queue ไม่มีให้มาอ่านใน Local disk. ต่อ
    end note
    participant "Panel API"
    participant "OIS api"
    "Panel PC" -> "OIS api" : \ngetStaffInfoById ด้วย operatorID
    "Panel PC" <-- "OIS api": ข้อมูลพนักงานปฏิบัติการ
    note left
      --ข้อมูลผู้ที่กดรับงาน--
      duty รถที่ Check In **ใช้ในการตรวจสอบ**
      ---
      เก็บ object ไว้ใช้ต่อ เพราะ Panel PC ไม่มี Login
      ใช้ในการแสดงข้อมูลเจ้าหน้าที่ ที่กดรับงาน ของพาหนะคันนี้
    end note

    hnote over "Panel PC"
      ทำการตรวจสอบว่า เจ้าหน้าที่ กำลังอยู่บนรถนี้จริง
      เพื่อป้องกันหากเจ้าหน้าที่ checkOut ไปแล้ว
      หรือ checkIn เข้ารถคันอื่นไปแล้ว
      --เงื่อนไข--
      ตรวจสอบ duty == currentVehicleId
      ถ้าตรงทำต่อ
      ถ้าไม่ตรงออกรอ Message Queue ใหม่

      อย่าลืมตรวจสอบ สถานะเจ้าหน้าที่ด้วย status == Active
    end note

    "Panel PC" -> "Panel API" : \nJoin MIS with misRoomId
    note left
      อาจจะต้องสร้าง Window app เฉพาะ
    end note
    "Panel PC" <-- "Panel API": \nข้อมูลห้อง MIS แล้วแต่ออกแบบ
  end
  ...

  group เมื่อเข้าห้อง MIS แล้วมีการ เปลี่ยนสถานะ

      OIS -> "Panel PC" : \nผู้ปฏิบัติงาน\nเปลี่ยนสถานะ เช่น ถึงจุด, รับขึ้น ...
      "Panel PC" -> "OIS api" :getJob ด้วย woord020_id
      "Panel PC" <-- "OIS api":
      note left
        job_details.id เก็บไว้ใช้เรียก setActions
      end note

      "Panel PC" -> "Panel API": setActions
      rnote over "Panel API"
        ทำกระบวนการของ mis เช่น
        - หากกดรับผู้ป่วย
          ให้เปลี่ยนกล้อง
      end note

      "Panel API" -> "OIS api": \nsetActions

    end
    ...

    group เมื่อมี Message เข้ามาระหว่างที่เข้าห้อง MIS
      rnote over "Panel PC"
        ให้แจ้งเตือนบริเวณมุมบนขวา ว่ามีเคสใหม่ จะเข้าห้องหรือไม่
        ให้เจ้าหน้าที่ปฏิบัติงานเลือกเองว่าจะเข้าหรือไม่
      end note
    end

    group เมื่อมีผู้ปฏิบัติงานในรถ กดดูรายการห้องทั้งหมด
      OIS -> "Panel PC" : กดออกห้อง ดูรายการห้อง MIS ทั้งหมด
      "Panel PC" -> "Panel API" : \nQuery with operatorID\nถามบอลก่อนว่าออกแบบ Database ไว้กรณีแบบนี้หรือไม่
      "Panel PC" <-- "Panel API": ข้อมูลที่รายการห้อง และ ข้อมูลที่ใช้สำหรับ Join ห้อง mis
      OIS <--"Panel PC" : แสดงรายการห้อง MIS

      OIS -> "Panel PC" : เลือกห้องใหม่
    end

@enduml
